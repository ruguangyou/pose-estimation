%YAML:1.0
# camera image resolution, 2560x720(30Hz), 1344x376(60Hz)
width: 1344
height: 376

# left camera intrinsics
camLeft: !!opencv-matrix
    rows: 3
    cols: 3
    dt: f
    data: [ 342.791722, 0.000000, 334.706838, 0.000000, 344.124357, 196.550958, 0.000000, 0.000000, 1.000000]
radDistLeft: !!opencv-matrix
    rows: 1
    cols: 2
    dt: f
    data: [ -0.161924, -0.015441]
tanDistLeft: !!opencv-matrix
    rows: 1
    cols: 2
    dt: f
    data: [ 0.000000, 0.000000]

# right camera intrinsics
camRight: !!opencv-matrix
    rows: 3
    cols: 3
    dt: f
    data: [ 341.251536, 0.000000, 349.920843, 0.000000, 342.367160, 198.743062, 0.000000, 0.000000, 1.000000]
radDistRight: !!opencv-matrix
    rows: 1
    cols: 2
    dt: f
    data: [ -0.158054, -0.057100]
tanDistRight: !!opencv-matrix
    rows: 1
    cols: 2
    dt: f
    data: [ 0.000000, 0.000000]

# camera extrinsics
rotationLeftToRight: !!opencv-matrix
    rows: 3
    cols: 3
    dt: f
    data: [ 0.999980, 0.000561, -0.006365, -0.000626, 0.999948, -0.010216, 0.006359, 0.010220, 0.999928]
translationLeftToRight: !!opencv-matrix
    rows: 1
    cols: 3
    dt: f
    data: [ -0.113323, 0.000475, -0.003484]

# feature detector parameters
detectorType: "ORB"  # available (ORB, BRISK)
# ORB
numberOfFeatures: 500
scaleFactor: 1.2
levelPyramid: 8

# feature matching parameters
matchRatio: 1.5    # the distance of a good match should be smaller than minDist*matchRatio
minMatchDist: 30.0 # another number for selecting good matches, from experience
matchThresLow: 0.6 # lower bound of matching percentage, for determining key frame
matchThresUp: 0.8  # upper bound of matching percentage, for determining key frame

#max_num_lost: 10
#min_inliers: 10
#keyframe_rotation: 0.1
#keyframe_translation: 0.1
